---
// No server-side logic needed on this page itself
import '../styles/global.css';
---
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Icebreaker Question Generator</title>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <main class="bg-white p-8 rounded-lg shadow-md text-center max-w-md w-full">
        <h1 class="text-2xl font-bold mb-4 text-gray-800">Icebreaker Question</h1>
        <div id="question-container" class="min-h-[100px] flex items-center justify-center p-4 bg-gray-50 rounded-md border border-gray-200">
            <p id="question-display" class="text-lg text-gray-700">Click the button to get a question!</p>
            <div id="loader" class="hidden"></div>
        </div>
        <button id="new-question-btn" class="mt-6 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition-colors duration-300">
            Get New Question
        </button>
    </main>

    <script>
        const questionDisplay = document.getElementById('question-display') as HTMLParagraphElement;
        const newQuestionBtn = document.getElementById('new-question-btn') as HTMLButtonElement;
        const loader = document.getElementById('loader') as HTMLDivElement;

        if (questionDisplay && newQuestionBtn && loader) {
            newQuestionBtn.addEventListener('click', async () => {
                // Show loader and hide text
                loader.classList.remove('hidden');
                questionDisplay.classList.add('hidden');
                newQuestionBtn.disabled = true;
                newQuestionBtn.classList.add('opacity-50', 'cursor-not-allowed');

                try {
                    const response = await fetch('/api/generate-question');
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const data = await response.json();
                    questionDisplay.textContent = data.question;
                } catch (error) {
                    console.error("Error fetching question:", error);
                    questionDisplay.textContent = "Sorry, something went wrong. Please try again!";
                } finally {
                    // Hide loader and show text
                    loader.classList.add('hidden');
                    questionDisplay.classList.remove('hidden');
                    newQuestionBtn.disabled = false;
                    newQuestionBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                }
            });
        }
    </script>
</body>
</html> 